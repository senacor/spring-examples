# server.error.whitelabel.enabled=false
# In case a handler is not found and if Spring Boot's default configuration for handling static resources is on,
# the resource handler will be handling the request (it's ordered last and mapped to /**
# which means that it picks up any requests that haven't been handled by
# any other handler in the application) so the dispatcher servlet doesn't get a chance to throw an exception.
# and the globalexceptionhandler will not be able to process the exception
spring.resources.add-mappings=false
# Set whether to throw a NoHandlerFoundException when no Handler was found for this request. This exception can then
# be caught with a HandlerExceptionResolver or an @ExceptionHandler controller method.
# Note that if DefaultServletHttpRequestHandler is used, then requests will always be forwarded to the default servlet
# and a NoHandlerFoundException would never be thrown in that case.
# Default is "false", meaning the DispatcherServlet sends a NOT_FOUND error through the Servlet response.
spring.mvc.throw-exception-if-no-handler-found=true
#server.port=0